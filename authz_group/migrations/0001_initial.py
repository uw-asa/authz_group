# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-01 21:23
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Crowd',
            fields=[
                ('id', models.AutoField(db_column='group_id', primary_key=True, serialize=False)),
                ('source_key', models.CharField(db_column='source_key', db_index=True, max_length=100)),
                ('source_type', models.CharField(db_column='model_package', max_length=100)),
            ],
            options={
                'db_table': 'GroupWrapper',
            },
        ),
        migrations.CreateModel(
            name='CrowdOwner',
            fields=[
                ('id', models.AutoField(db_column='group_owner_id', primary_key=True, serialize=False)),
                ('group', models.ForeignKey(db_column='group_id', on_delete=django.db.models.deletion.CASCADE, to='authz_group.Crowd')),
            ],
            options={
                'db_table': 'GroupOwner',
            },
        ),
        migrations.CreateModel(
            name='GWSCrowd',
            fields=[
                ('id', models.IntegerField(db_column='id')),
                ('source_key', models.CharField(db_column='source_key', max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=255)),
                ('description', models.TextField(db_column='description')),
                ('date_created', models.DateTimeField(db_column='date_created')),
                ('date_modified', models.DateTimeField(db_column='date_modified')),
                ('date_reconciled', models.DateTimeField(db_column='date_reconciled')),
            ],
            options={
                'db_table': 'GWSGroup',
            },
        ),
        migrations.CreateModel(
            name='GWSCrowdOwner',
            fields=[
                ('id', models.AutoField(db_column='gws_viewers_id', primary_key=True, serialize=False)),
                ('person_id', models.IntegerField(db_column='person_id', db_index=True)),
                ('gws_crowd', models.ForeignKey(db_column='source_key', on_delete=django.db.models.deletion.CASCADE, to='authz_group.GWSCrowd')),
            ],
            options={
                'db_table': 'GWSViewers',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('person_id', models.AutoField(db_column='person_id', primary_key=True, serialize=False)),
                ('login_name', models.TextField(db_column='login_name', max_length=128)),
                ('name', models.TextField(db_column='name', max_length=255)),
                ('login_realm_id', models.IntegerField(db_column='login_realm_id', default=1)),
            ],
            options={
                'db_table': 'Person',
            },
        ),
        migrations.CreateModel(
            name='SolsticeCrowd',
            fields=[
                ('id', models.AutoField(db_column='source_key', primary_key=True, serialize=False)),
                ('application', models.CharField(db_column='application', max_length=255)),
                ('is_visible', models.BooleanField(db_column='is_visible')),
                ('name', models.CharField(db_column='name', max_length=255)),
                ('description', models.TextField(db_column='description')),
                ('date_created', models.DateTimeField(db_column='date_created')),
                ('date_modified', models.DateTimeField(db_column='date_modified')),
                ('member_string', models.CharField(db_column='member_str', max_length=255)),
                ('creator', models.ForeignKey(db_column='creator_id', on_delete=django.db.models.deletion.CASCADE, related_name='creator_person', to='authz_group.Person')),
            ],
            options={
                'db_table': 'Crowd',
            },
        ),
        migrations.CreateModel(
            name='SolsticeCrowdMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person', models.ForeignKey(db_column='person_id', on_delete=django.db.models.deletion.CASCADE, to='authz_group.Person')),
                ('sol_crowd', models.ForeignKey(db_column='crowd_id', on_delete=django.db.models.deletion.CASCADE, to='authz_group.SolsticeCrowd')),
            ],
            options={
                'db_table': 'PeopleInCrowd',
            },
        ),
        migrations.CreateModel(
            name='SolsticeCrowdOwner',
            fields=[
                ('id', models.AutoField(db_column='crowd_owner_id', primary_key=True, serialize=False)),
                ('person', models.ForeignKey(db_column='person_id', on_delete=django.db.models.deletion.CASCADE, to='authz_group.Person')),
                ('sol_crowd', models.ForeignKey(db_column='crowd_id', on_delete=django.db.models.deletion.CASCADE, to='authz_group.SolsticeCrowd')),
            ],
            options={
                'db_table': 'CrowdOwner',
            },
        ),
        migrations.AddField(
            model_name='solsticecrowd',
            name='owners',
            field=models.ManyToManyField(related_name='sol_crowd_owner', through='authz_group.SolsticeCrowdOwner', to='authz_group.Person'),
        ),
        migrations.AddField(
            model_name='crowdowner',
            name='person',
            field=models.ForeignKey(db_column='person_id', on_delete=django.db.models.deletion.CASCADE, to='authz_group.Person'),
        ),
        migrations.AddField(
            model_name='crowd',
            name='owners',
            field=models.ManyToManyField(through='authz_group.CrowdOwner', to='authz_group.Person'),
        ),
        migrations.AlterUniqueTogether(
            name='solsticecrowdowner',
            unique_together=set([('sol_crowd', 'person')]),
        ),
        migrations.AlterUniqueTogether(
            name='solsticecrowdmember',
            unique_together=set([('sol_crowd', 'person')]),
        ),
        migrations.AlterUniqueTogether(
            name='gwscrowdowner',
            unique_together=set([('gws_crowd', 'person_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='crowdowner',
            unique_together=set([('group', 'person')]),
        ),
        migrations.AlterUniqueTogether(
            name='crowd',
            unique_together=set([('source_key', 'source_type')]),
        ),
    ]
